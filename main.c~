#include <stdio.h>

#include "selene.h"

int main(int argc, char* argv[]) {

  selene_init(640, 480, SDL_WINDOW_OPENGL);

  Image * image = selene_create_image("assets/rat.jpg");
  
  Shader * shader = selene_create_shader("vert.glsl", "frag.glsl");

  glClearColor(0.2, 0.3, 0.3, 1.0);
  
  while (engine->_running) {
    selene_poll_event();

    if (engine->_event.type == SDL_QUIT) {
      engine->_running = SELENE_FALSE;
    }

    if (selene_key_down("left")) {
      printf("Key Left Pressed\n");
    }
    // Clear the screen
    selene_clear_screen();

    selene_use_shader(shader);

    mat4x4 P;
    mat4x4_ortho(P, 0.0, 640.0, 480.0, 0.0, 0.0, 1.0);

    mat4x4 V;
    mat4x4_identity(V);

    mat4x4 M;
    mat4x4_identity(M);
    mat4x4_translate(M, 0.0f, 0.0f, 0.f);
    mat4x4_scale_aniso(M, M, 640.f, 480.f, 0.0f);

    /*GLuint world = glGetUniformLocation(shader->_ID, "world");
      glUniformMatrix4fv(world, 1, GL_FALSE, *P);*/
    
    selene_send_uniform(shader, "world", 16, *P);
    selene_send_uniform(shader, "view", 16, *V);
    selene_send_uniform(shader, "model", 16, *M);

    selene_draw_image(image, 0, 0);

    selene_swap_window();
  }

  selene_terminate();

  return 0;
}
